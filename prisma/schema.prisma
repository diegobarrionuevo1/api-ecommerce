// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Users 

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  name        String
  password    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userAddress UserAddress[]
  order       Order[]
}

//Category

model Category {
  id        Int       @id @default(autoincrement())
  category  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  product   Product[]
}

model UserAddress {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  street    String
  number    String
  zipCode   String
  city      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String
  price      Float
  imgUrl     String
  category   Category @relation(fields: [categoryId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  categoryId Int
  orderItems  OrderItems[]
}

model Status {
  id    Int     @id @default(autoincrement())
  state String
  order Order[]
}

model Order {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  status         Status       @relation(fields: [statusId], references: [id])
  statusId       Int
  orderItems     OrderItems[]
  paymentId      String //ESTO LO TENGO QUE TENER PARA MERCADOLIBRE
  merchanOrderId String //
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model OrderItems {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId],references: [id])
  productId Int
  quantity  Int
  unitPrice Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
